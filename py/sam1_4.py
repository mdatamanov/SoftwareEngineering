# Импорт класса datetime из модуля datetime для работы с датой и временем
from datetime import datetime
# Импорт функции sqrt из модуля math для вычисления квадратного корня
from math import sqrt


# Определение главной функции с возможностью принимать произвольное количество именованных аргументов
def main(**kwargs):
    """
    Функция вычисляет евклидову норму для векторов, переданных в параметрах.

    Args:
        **kwargs: Произвольное количество именованных аргументов,
                 где значения - списки из двух чисел [x, y]

    Returns:
        None: Функция выводит результаты вычислений в консоль
    """
    # Цикл для перебора всех переданных аргументов
    # Метод items() возвращает пары (ключ, значение) для каждого аргумента
    for key in kwargs.items():
        # Вычисление евклидовой нормы (длины вектора) по формуле sqrt(x² + y²)
        # key[1][0] - первый элемент списка-значения (x)
        # key[1][1] - второй элемент списка-значения (y)
        result = sqrt(key[1][0] ** 2 + key[1][1] ** 2)
        # Вывод вычисленного результата в консоль
        print(result)


# Проверка, запущен ли скрипт напрямую (а не импортирован как модуль)
if __name__ == '__main__':
    # Запись текущего времени в переменную start_time (время начала выполнения)
    start_time = datetime.now()

    # Вызов функции main с передачей пяти именованных аргументов
    # Каждый аргумент - список из двух чисел, представляющих координаты вектора
    main(
        one=[10, 3],  # Вектор с координатами (10, 3)
        two=[5, 4],  # Вектор с координатами (5, 4)
        three=[15, 13],  # Вектор с координатами (15, 13)
        four=[93, 53],  # Вектор с координатами (93, 53)
        five=[133, 15]  # Вектор с координатами (133, 15)
    )

    # Вычисление времени выполнения программы как разницы между текущим временем и временем начала
    time_costs = datetime.now() - start_time

    # Вывод времени выполнения программы в консоль
    # f-строка форматирует вывод, подставляя значение переменной time_costs
    print(f"Время выполнения программы - {time_costs}")